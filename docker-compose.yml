version: "3.9"
services:
  baw:
    container_name: baw
    build:
      context: ./billing-app-web
    ports:
      - 3000:3000
    volumes:
      - ./billing-app-web:/webapp
    command: npm run start
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true

  purchasesdb:
    container_name: purchasesdb
    image: postgres:alpine
    ports:
      - "5433:5432"
    env_file:
      - ./billing-app-backend--purchases/src/database/.env
    volumes:
      - ./billing-app-backend--purchases/src/database/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U billinguser -d purchasesdb"]
      interval: 5s
      timeout: 5s
      retries: 12

  purchases:
    container_name: purchases
    build:
      context: ./billing-app-backend--purchases
    ports:
      - 4000:4000
    volumes:
      - ./billing-app-backend--purchases/src:/purchases/src
      - ./billing-app-backend--purchases/migrations:/purchases/migrations
    environment:
      - POSTGRES_HOST=purchasesdb
      - DATABASE_URL=postgres://billinguser:password@purchasesdb:5432/purchasesdb
    command: 
      - sh
      - -c
      - npm run migrate-up && npm run start
    depends_on:
      purchasesdb:
        condition: service_healthy

  paymentsdb:
    container_name: paymentsdb
    image: postgres:alpine
    ports:
      - "5434:5432"
    env_file:
      - ./billing-app-backend--payments/src/database/.env
    volumes:
      - ./billing-app-backend--payments/src/database/data:/var/lib/postgresql/data
    depends_on:
      - "purchases"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U billinguser -d paymentsdb"]
      interval: 5s
      timeout: 5s
      retries: 12

  payments:
    container_name: payments
    build:
      context: ./billing-app-backend--payments
    ports:
      - 4001:4001
    volumes:
      - ./billing-app-backend--payments/src:/payments/src
      - ./billing-app-backend--payments/migrations:/payments/migrations
    environment:
      - POSTGRES_HOST=paymentsdb
      - DATABASE_URL=postgres://billinguser:password@paymentsdb:5432/paymentsdb
    command: 
      - sh
      - -c
      - npm run migrate-up && npm run start
    depends_on:
      paymentsdb:
        condition: service_healthy

  # Expenditures: initial server setup for example. Not being used.
  # babe:
  #   container_name: babe
  #   build:
  #     context: ./billing-app-backend--expenditures
  #   ports:
  #     - 4000:4000
  #   volumes:
  #     - ./src:/babe/src
  #   environment:
  #     - POSTGRES_HOST=babedb
  #     - DATABASE_URL=postgres://billinguser:password@babedb:5432/billingdb
  #   depends_on:
  #     babedb:
  #       condition: service_healthy

  # babedb:
  #   container_name: babedb
  #   image: postgres:alpine
  #   ports:
  #     - 5432:5432
  #   env_file:
  #     - ./billing-app-backend--expenditures/src/database/.env
  #   volumes:
  #     - ./billing-app-backend--expenditures/src/database/data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U billinguser -d billingdb"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 12
